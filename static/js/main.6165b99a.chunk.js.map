{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","id","name","price","largestPrice","Math","max","map","good","App","state","goods","isStarted","isReversed","sortBy","maxPrice","start","setState","reverse","sortByName","sortByPrice","reset","this","visibleGoods","filter","sort","a","b","localeCompare","prices","className","type","onClick","classNames","step","min","value","onChange","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6165b99a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\ninterface Good {\n  id: number;\n  name: string;\n  price: number;\n}\n\nconst goodsFromServer: Good[] = [\n  { id: 1, name: 'Dumplings', price: 11 },\n  { id: 2, name: 'Carrot', price: 2 },\n  { id: 3, name: 'Eggs', price: 7 },\n  { id: 4, name: 'Ice cream', price: 4 },\n  { id: 5, name: 'Apple', price: 3 },\n  { id: 6, name: 'Bread', price: 4 },\n  { id: 7, name: 'Fish', price: 4 },\n  { id: 8, name: 'Honey', price: 14 },\n  { id: 9, name: 'Jam', price: 12 },\n  { id: 10, name: 'Garlic', price: 1 },\n];\n\nconst largestPrice: number = Math.max(...goodsFromServer.map(good => good.price));\n\ninterface State {\n  goods: Good[];\n  isStarted: boolean;\n  isReversed: boolean;\n  sortBy: 'name' | 'price' | null;\n  maxPrice: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isStarted: false,\n    isReversed: false,\n    sortBy: null,\n    maxPrice: largestPrice,\n  };\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState({ sortBy: 'name' });\n  };\n\n  sortByPrice = () => {\n    this.setState({ sortBy: 'price' });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: null,\n      maxPrice: 20,\n    });\n  };\n\n  render() {\n    const {\n      isStarted, goods, maxPrice, isReversed, sortBy,\n    } = this.state;\n\n    const visibleGoods = goods.filter(good => good.price <= maxPrice);\n\n    if (sortBy) {\n      visibleGoods.sort((a, b) => {\n        switch (sortBy) {\n          case 'name':\n            return a.name.localeCompare(b.name);\n\n          case 'price':\n            return a.price - b.price;\n\n          default:\n            return 1;\n        }\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    const prices = goods.map((good: Good) => good.price);\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__heading\">Goods</h1>\n        {isStarted || (\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.start}\n          >\n            start\n          </button>\n        )}\n        {isStarted && (\n          <div className=\"App\">\n\n            <div className=\"App__buttons\">\n              <button\n                className={classNames(\n                  'App__button',\n                  { 'App__button--active': isReversed },\n                )}\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                reverse\n              </button>\n              <button\n                className={classNames(\n                  'App__button',\n                  { 'App__button--active': sortBy === 'name' },\n                )}\n                type=\"button\"\n                onClick={this.sortByName}\n              >\n                sort alphabetically\n              </button>\n              <button\n                className={classNames(\n                  'App__button',\n                  { 'App__button--active': sortBy === 'price' },\n                )}\n                type=\"button\"\n                onClick={this.sortByPrice}\n              >\n                sort by price\n              </button>\n              <button\n                className=\"App__button\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                reset\n              </button>\n            </div>\n            <div className=\"App__price-filter\">\n              <input\n                className=\"App__max-price\"\n                type=\"range\"\n                name=\"maxPrice\"\n                step={1}\n                min={\n                  Math.min(\n                    ...prices,\n                  )\n                }\n                max={\n                  Math.max(\n                    ...prices,\n                  )\n                }\n                value={maxPrice}\n                onChange={(event) => {\n                  const { name, value } = event.target;\n\n                  this.setState(state => ({\n                    ...state,\n                    [name]: value,\n                  }));\n                }}\n              />\n              <span>\n                {`Max price: ${maxPrice}`}\n              </span>\n            </div>\n            <ul className=\"App__list\">\n              {visibleGoods.map(good => (\n                <li\n                  key=\"good.id\"\n                  className=\"App__item\"\n                >\n                  <h2 className=\"App__good-name\">{good.name}</h2>\n                  <p className=\"App__good-price\">{`price: ${good.price}`}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}